name: Workflow Tester
run-name: Workflow Tester

on:
  push:
    branches:
      - samples/*
  workflow_dispatch:

env:
  TFPLAN_FILE_NAME: tfplan

jobs:
  terraform-plan:
    name: Terraform Plan
    uses: ./.github/workflows/wf-tf-plan.yaml
    permissions:
      id-token: write
      contents: read
    with:
      tfPlanFileName: ${{ env.TFPLAN_FILE_NAME }}
    secrets:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

  terraform-apply:
    name: Terraform Apply
    if: needs.terraform-plan.outputs.tfplanExitCode == 2
    runs-on: ubuntu-latest
    needs: terraform-plan
    environment: development
    permissions:
      id-token: write
      contents: read
    env:
      ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
      ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
      ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"
      WORKING_DIRECTORY: .github/samples-infra

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          sparse-checkout: ${{ env.WORKING_DIRECTORY }}
          sparse-checkout-cone-mode: false

      - name: Download Terraform Plan
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.TFPLAN_FILE_NAME }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init
        working-directory: ${{ env.WORKING_DIRECTORY }}

      - name: Terraform Apply
        run: terraform apply -auto-approve ${{ env.TFPLAN_FILE_NAME }}

name: wf_nuget_publish
run-name: Publish NuGet Package

on:
  workflow_call:
    inputs:
      push_package_to_nuget:
        type: boolean
        default: false
      build_configuration:
        description: 'Build Configuration'
        type: string
        default: 'Release'
      version_suffix:
        description: 'Version Suffix'
        type: string
        default: ''
    secrets:
      nuget_api_key:
        description: 'NuGet API Key'
        required: true
    
env:
  PACKAGE_DIR_NAME: nupkgs
  PACKAGE_OUTPUT_PATH: ${{ github.workspace }}/nupkgs
  GITHUB_PACKAGE_SOURCE: "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json"

jobs:
  prepare_package:
    name: Prepare Package
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          sparse-checkout: src

      - name: Create packages directory
        run: mkdir -p packages

      - name: Pack
        run: dotnet pack $GITHUB_WORKSPACE/src/InvvardDev.Ifttt.csproj --output $PACKAGE_DIR_NAME --configuration ${{ inputs.build_configuration }} -p:GeneratePackageOnBuild=false

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: nuget-packages
          path: ${{ env.PACKAGE_OUTPUT_PATH }}

  publish_to_nuget:
    name: Publish Package to NuGet
    if: inputs.push_package_to_nuget
    runs-on: ubuntu-latest
    needs: [prepare_package]

    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: nuget-packages
          path: ${{ env.PACKAGE_OUTPUT_PATH }}
          
      - name: Publish to NuGet
        run: dotnet nuget push ${{ env.PACKAGE_OUTPUT_PATH }}/*.* --api-key $api_key --source https://api.nuget.org/v3/index.json --skip-duplicate
        env:
          api_key: ${{ secrets.nuget_api_key }}

  publish_to_github:
    name: Publish Package to GitHub Packages
    runs-on: ubuntu-latest
    needs: [prepare_package]
    permissions:
      packages: write

    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: nuget-packages
          path: ${{ env.PACKAGE_OUTPUT_PATH }}
          
      - name: Publish to GitHub Packages
        run: dotnet nuget push ${{ env.PACKAGE_OUTPUT_PATH }}/*.* --api-key ${{ env.api_key }} --source ${{ env.GITHUB_PACKAGE_SOURCE }} --skip-duplicate --no-symbols
        env:
          api_key: ${{ secrets.GITHUB_TOKEN }}